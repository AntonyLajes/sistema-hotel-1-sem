<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABdDgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAAAFv
        ck5UAc+id5oAAA4XSURBVHja7d0JcBX1HQfwLwFyEQIWJCQwohSKDGTScnkwKOKUQLgEhGkrMAynjpVj
        gJERj3qMlEFGI1JLAVt6MtIDaAUJA3bkUtTW4gEFBKQYrkDIZUheCP0Bj5C3+38vu/t2N/vefv+/cQZf
        /v+3/+Pz3tvjv/8FGiel4VHswgVcQiH+hsFIUOZqj+fxKUpRiaNYjZww75WArpiJVdiLEyhBtfx3Ah9I
        /sfQDU11uftiJwK4YiIKMR/Ng6W7YqW8u7HyF7ECtwTLNccYbMEZae85bMcjSILP00yU1+uqQ+inyJOE
        11BTL9c/kanIdSeW4Ashoh+ASziAV9AjJHcLrDM1+DcI9A+yNVe6ElOC283FN/VeP49x/h7+FPxZ01Xz
        lJ//QyF5yqQbQ1Mz/Aj7GxiELzCp7vMLdA8ZCOPx1LXS3xMK5sr9LvhZf1nz+i8V300+Si3xjqZDnlHk
        6oiTIXkqMFrz1T9FPktGvoofq+vuAfKzYwVAPppI6RycNVlui7T1anpN8/pv/f0jYBTA/yICyMMpg8NQ
        VFfy+6aH8Hq8dK10jvyKmyu3DsnXSr6qA5BIANEB+A4KTAzETmRcK9UWeywM/7cYawnAZcwK1pYAbAcw
        QbnjF5Cdy4Dy9UeD5SbhtAxMbUhoc4f+9RL+gNZKALWyX1IsPzHqKMIf63ZbCcBmAImye6UdttP4BaZi
        lOwZLFfsrG1AavCAbIDsEzxRF4/jL5qcR/Ekflovxzi0C25VC6BU/no/HlDGIPRBel19CcBmAB3lEC/0
        HY5hWN2uXgJ+qDmCuILjsg+vTrN0PxfpYXJqAZzHPQZbTAA2AxgoX72hv7aLNKVna34KyuW7QZ3maOqy
        S/YvjALoTwCNA2Cc7JjV/9sZZGtKf1dTOoDpBBA/AGZoPt9fBPfyb6Y2+FCzjQUEED8A5mvKvxfcT69/
        teHvmjwvEkD8AHhSU34bWmlKp+KvmjwvE4B3ATytyJUVAwDuJQB7AOzEYiwJiZ/LUX2pxwEUY6j89LSp
        Fy0IwBoAI+E9AAF8jr118YH8txFjlHMbCCAuAajia/QhAD8DUB9uEoCPACwmAD8DuIwZBGAewBEUyCDW
        jwK8j0sxB+Cy1KQjAZgH8JIMWKuQaKmbv+c9AN9iFRbhmXoxA515GGjXiaAOMXAi6C6eCOKpYAIgAAJw
        G8A8Xg30N4BpmvkAX6K9pnQb7DNw8wkBxCiAMfJ/5mYEVWMyAcQPgPt1cwKf1g1rQHNj2XACiB8AnXBQ
        N+t3eL1Zwbk4rPt7NwcA3G0RwG94b2B0AJrjLd1ZuDNYUXdfgP6msfVIceBE0K/xvOxcqmMBeocFsF+O
        SV5QlHlO6p9CAA0DAB7RnCiOfGdQDWaGrY3dF4NuxmfoFQZA+ChRXksgAB2ANthsYijeU64t4DSAq1cG
        m5gEcAV7wm6fAEL+PtDw3frnMCRCbZwEsCE4ScwMgEJ0jXcAKbqTNIsUuTJxQnNvz0hNjomaFQTUcQrT
        ItbG+K1hPSwAuH57+DITZU6GuaAUI6mJfDl3x33Iw7AwkSdH8bs1jX5L9ttDcw2V4S3U7HI9K5/k+u8z
        HKtQ1UB3BrAWIyLUZojsOl4OKfFvjFPmHyr7EWaXl9gqaPOk5HoTZb6W/Zs8XZ/dJ73aJviD4tnUTA6L
        lmCvfOaKUSpH3uGjWreejz5/uWZgauVHIDRXqcTlBrqz9lq+8DUp1d1mHgibs1xxK3nkqAqWrDJRpka5
        7WLp1b3Su3dLL3s0dcBS02voMMwvWLVUetqDqbupvXJGNLFZettjqSPe5cC4GO8qJ541WkpEPgfF5cj3
        0tWEgRbX3mJYj7PS6x5JTeVAigPifqzwygWlrAZX62Q4Eful5z2R7jG0XifD7jC+RJXDaVTIws835t+c
        xHGGbXFSd+os0rJXLqcJiguzB5GDTHRg2BKZ0psHFauhT/AGgEmKE52foi2Y7EttpUf1p5kneaNyExUA
        /lO3uiaTHamd9KgewEQCIAACIAACIAACIAACIAACIAACIAACIAACIAAXE08FO588fSpYdTHoALKRgUyG
        LZEhvXnAuxeDhqFMofMoDjFsi6OKb9ky6XlPpBzOCGykWYE53gDQHp9zOBohPteti9RIqampe18ZdsWr
        3lllZACKOCAuR5H0umdSEvJN3zbJiCZqpcc99QD6LN4a5vKtYVnwWOqBzQ3eqs2wIy5LT/fw4tmqDLyh
        mLzMsDeqpZczvHrCsp9iZ7AWlahgWIpKxZ5VkfSyZ1NfnNNV+CLmYhRGM0zHKOm5i4oFr/rGFoAz6Mlr
        ORZTT8WiVDEIIIcjafkkOwEQAAEQAAEQAAEQAAEQAAEQAAEQAAEQQFwC6IhhmI2nbI+FmIy7TD6IJUVK
        TJaS9tdmtrSyIwFoUzOMxT4Lq3EbvYJ2Fr8ysQp/Z6yUEtUOTeUol5aONbTmt48APOTCzOJNuNVQK26V
        nM7P6H2IAG6mDOxx4Up6DeYaasVcyel8bfYYuKrvGwCDUOLKZIqNwSf4REotJJcbdSmRVhNAMM1w5TN3
        dSZ9hoFvI3fucqgx8Hg43wCY69J0qqMGplJmSS53ajOXAG6kOS51+VeGAHzlUm3mEAABEAABEIAawFls
        lv3xTRZjIz5U7FhaBVAj7xZNXTYrz3IQQEQAO5CJVKRZjGSMVyxibxVAubxbsuW6pEpLdhCAWQDbwj7A
        1VgaYSuAEVHVJV1aQwCmAbSKqi4jbQUwMqq6tCIAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAA
        AiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAuCsYGuJs4JjHMB2tEcyUixGIh62FcDD8o5W65IsLdlO
        AGYBnMEGrLccb2M3ArYBCMi7vR1FbTYoBpIAGgDAewMJgAAIgAC4QghXCIl/ADN9uUbQTAK4kR50aZWw
        TYZWCdvkSl1KpNUEEEztsdeVz9w8Q62Y58r30V4Dz/720Uqho114/PQ/0M5QK9pJTucf/TzaQE18tVbw
        eHyMCsc++0VYgy6G29EFq6UlTn0PVEhLx3OtYH26DaOwAD+zPZ7FDPRHqqmWpOJeKfWsA7VZIK28zWAt
        +LwAnycCIAACIAACIAACIAACIAACIAACIID4BZCILPTDIDxgcwxEd9xiui2tpdRA2+sySFqYJS0lAF3q
        hjdwAEW4aHsUoxA7McXAlcAbqQUm430pVexAbYqklW9IawlA09R9Dl9++RaLkWyoFcl4WXI7W5t9BnvF
        JwDSsM6VK/BjDbVirCuzE9ZJqwkgQjkn4vdIarAuSZLLjboYGUjfAJiEKlc6/WO0bbAubSWXG3WpklYT
        QDBxVjABEAABEAABEAAB3IhLOIVvoojzqLUNQK28WzR1OSWtIQCTAHZJuTvQ2WJ0wnTFFFOrACrk3TpZ
        rssd0pJdBGAWQAFaRlWX4bauDzA8qrq0lNYQgEkAXCKGAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiA
        AAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAiAAAgg1gEUmFzdV5uGocw2AGXybtGkVE4LNw/g
        v1gor1uNWVituOXcKoAqebdZUdRmobSGAEwC4L2BBEAABEAABBC3j40jgLr0hOJWbifiEDIbrEum5HKj
        LrXSagIIplGOPS0oNHYYOLfQSnK5UZcKaTUBBFMXHHGl019BQoN1SZBcbtTliIGHWPkGQIIcKQcc7/Iv
        kW2oFdmS0+m6BKTFCQRwM7XGUhQ72uX/Qp7hduRJbifrUiytbW2gHr5aLDpJun0pNmCb7bEVazEfXU21
        pAvmSamtDtRmg7Qyz8CKpb4DcD21kJ0wuyPd8PLsoSlRStpfmxYmasAHRvg8EQABEAABEAABEAABEAAB
        EAABEAABEAABEAABEIA6JSIFyQ5GisXTygTgeEpGLp7DWqxzONbKVnINPoKSAFwDkIF8XHBpLt8V2VK+
        bJEAPAMg0aVZPKGzixIJwCsA+is6yuk4I1slAI8AmOXSrOLQWb2zCMArAJa5PvxXYxkBeANAEyxvFADL
        ZcsE4AkArzcKgNcJgAAIgAAIwJsAPsFLeAEv2hAvyDt9QgCxBuBNW7fxJgHEGoCVaGrbFprKuxEAARAA
        ARBAXAFIx+0S6QTgRwBpmIoCHJcokH+lEYC/AKQhH5V1eSvl/9IIwE8AptYb/usEphKAfwCkK5ZuLYiw
        L0AAcQbgDvnl1+Y/Lq8SgE8A/EBRz3PyKgH4BEBPnNblPy2vEoBPALTHZ7r8n8mrBOATAElYo8u/JsLC
        TQQQd4eBfXA4JPdheYWHgb46E5iHfai5lrNG/pXHM4F+A3D1YHA6lklMj3AASABxDMB4IgACIAACIAAC
        IIB4ApCG/pgm0b+B2QAEEJcAsvEnnEdA4rz8K5sA/AWgM3aH5N4trxCAbwA0xRJd/iUR8xNAXAFoi490
        +T+SVwnAJwDuRKEuf6G8SgA+AdBLOSGkFwH4B8BZXf6zBEAABEAABEAABEAABEAABEAABEAABEAABBAt
        gJ6Obzff5CJROUoAkaCqFonKd7xdPeMBQDEew2AMcSxyMRQbFcPzDvLkb6oSg/E4LuryX5RXB4fZQp68
        m34LG2XLuQ62bLD0XHHsA6hFOUpQ6mhUKYanOmzuEqlRrcl6Viu2UOVwq9T1jDkADHuDAAiAAAjAo6k3
        AbgAoLd3AdyOYxwih+OY9LJnU0ts4RA5HFuklz2cfowyDpKDUSY97OmUguddfICj3+KC9G4KPJ6S8RNs
        xelGeJBbPEet9OhW6VnbH1n7f7z4GZNyFfm+AAAAAElFTkSuQmCC
</value>
  </data>
</root>